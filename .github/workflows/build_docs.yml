name: Build and Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/build_docs.yml'
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/build_docs.yml'
  workflow_dispatch:
  # Build docs if Animate, Goalie, Movement, or UM2N have been updated in the last 24h
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: 'build_docs-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  # Check if there have been commits on the main branch of other repos in the last 24h
  check_updates:
    name: Check for updates in Animate, Goalie, Movement, and UM2N
    runs-on: ubuntu-latest
    outputs:
      updates_found: ${{ steps.check_repos.outputs.updates_found }}
    steps:
      - name: Set up environment
        run: |
          echo "REPOS=https://api.github.com/repos/mesh-adaptation/animate https://api.github.com/repos/mesh-adaptation/goalie https://api.github.com/repos/mesh-adaptation/movement https://api.github.com/repos/mesh-adaptation/UM2N" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Check for updates in repositories
        id: check_repos
        run: |
          for repo in $REPOS; do
            echo "Checking $repo"
            commits=$(curl -L -H "Authorization: token $GITHUB_TOKEN" "$repo/commits?sha=main&since=$(date -d '24 hours ago' +'%Y-%m-%dT%H:%M:%SZ')")
            echo $commits
            if [ ${#commits} -gt 10 ]; then
              echo "Found new commits in $repo"
              echo "updates_found=true" >> $GITHUB_ENV
            fi
          done

  build_docs:
    name: Build Mesh Adaptation Documentation
    runs-on: ubuntu-latest
    needs: check_updates
    container:
      image: ghcr.io/mesh-adaptation/firedrake-um2n:latest
      options: --user root
      volumes:
        - ${{ github.workspace }}:/home/firedrake/output
    if: ${{ needs.check_updates.outputs.updates_found == 'true' || github.event_name != 'schedule' }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Animate, Goalie, Movement, and UM2N
        run: |
          . /home/firedrake/firedrake/bin/activate
          cd /home/firedrake/firedrake/src/
          git config --global --add safe.directory '*'

          git clone https://github.com/mesh-adaptation/animate.git
          pip install -e animate

          git clone https://github.com/mesh-adaptation/goalie.git
          pip install -e goalie

          pip uninstall -y movement
          cd movement/
          git pull
          pip install -e .

          pip uninstall -y UM2N
          cd /home/firedrake/firedrake/src/UM2N/
          git pull
          pip install -e .
        working-directory: /home/firedrake/output/
        shell: bash

      - name: Install Sphinx and other dependencies
        run: |
          . /home/firedrake/firedrake/bin/activate
          python3 -m pip install -r requirements.txt
        working-directory: /home/firedrake/output/
        shell: bash

      - name: Build HTML Documentation
        run: |
          . /home/firedrake/firedrake/bin/activate
          cd docs
          make run_animate_demos
          make run_goalie_demos
          make run_movement_demos
          make html
        working-directory: /home/firedrake/output/
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: /home/firedrake/output/docs/build/html

  deploy:
    name: Deploy to GitHub Pages
    needs: build_docs
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
