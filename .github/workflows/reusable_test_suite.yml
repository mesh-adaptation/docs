name: 'Reusable Test Suite'

on:
  workflow_call:
    inputs:
      docker-image:
        description: 'Name of the Firedrake Docker image to use'
        required: false
        default: 'firedrake-parmmg'
        type: string
      test-command:
        description: 'Command to run before running tests'
        required: false
        type: string

# Cancel jobs running if new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test_suite:
    name: 'Test suite'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mesh-adaptation/${{ inputs.docker-image }}:pip
      options: --user root

    steps:
      - name: Set environment variables
        run: |
          echo "PETSC_DIR=/home/firedrake/petsc" >> $GITHUB_ENV
          echo "PETSC_ARCH=arch-firedrake-default" >> $GITHUB_ENV
          echo "PATH=/home/firedrake/petsc/arch-firedrake-default/bin:/home/firedrake/.local/bin:$PATH" >> $GITHUB_ENV
          echo "HDF5_MPI=ON" >> $GITHUB_ENV
          echo "CC=mpicc" >> $GITHUB_ENV
          echo "CXX=mpicxx" >> $GITHUB_ENV
          echo "CFLAGS=-mtune=generic" >> $GITHUB_ENV
          echo "CPPFLAGS=-mtune=generic" >> $GITHUB_ENV
          echo "MPICC=mpicc" >> $GITHUB_ENV

      - name: 'Check out the repo'
        id: checkout
        uses: actions/checkout@v4     

      - name: 'Install package'
        run: pip install --break-system-packages -e .[dev]

      - name: 'Lint'
        run: make lint

      - name: 'Run tests'
        run: |
          ${{ inputs.test-command }}
          python3 $(which firedrake-clean)
          python3 -m coverage erase
          python3 -m coverage run --source=${{ github.event.repository.name }} -m pytest -v --durations=20 -k "not test_parallel.py" test
          mpiexec -n 2 python3 -m coverage run --source=${{ github.event.repository.name }} -m pytest -v --durations=20 -m parallel[2] test
          python3 -m coverage report -m
